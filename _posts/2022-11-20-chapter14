14장 Classifying Images with Deep Convolutional Neural Networks

​    

이전 장에서는 PyTorch 신경망과 자동 미분 모듈의 다양한 측면을 자세히 살펴보았고 텐서와 장식 기능에 익숙해져 토치.nn 작업 방법을 배웠습니다. 이 장에서는 이제 이미지 분류를 위한 컨볼루션 신경망(CNN)에 대해 배울 것입니다. 우리는 상향식 접근법을 사용하여 CNN의 기본 구성 요소에 대해 논의하는 것으로 시작할 것입니다. 그런 다음 CNN 아키텍처에 대해 더 자세히 살펴보고 파이토치에서 CNN을 구현하는 방법을 알아보겠습니다. 이 장에서는 다음 항목을 다룹니다.

• 1차원 및 2차원에서의 컨볼루션 연산입니다.

• CNN 아키텍처의 구성 요소입니다.

• PyTorch에서 심층 CNN을 구현합니다.

• 일반화 성능을 개선하기 위한 데이터 확대 기술입니다.

• 누군가 웃고 있는지 여부를 인식하기 위한 얼굴 CNN 분류기를 구현합니다.

​    

The building blocks of CNNs

Understanding CNNs and feature hierarchies

Performing discrete convolutions

Discrete convolutions in one dimension

Padding inputs to control the size of the output feature maps

Determining the size of the convolution output

Performing a discrete convolution in 2D

Subsampling layers

Putting everything together – implementing a CNN

Working with multiple input or color channels

Regularizing an NN with L2 regularization and dropout

Loss functions for classification

Implementing a deep CNN using PyTorch

The multilayer CNN architecture

Loading and preprocessing the data

Implementing a CNN using the torch.nn module

Configuring CNN layers in PyTorch

Constructing a CNN in PyTorch

Smile classification from face images using a CNN

Loading the CelebA dataset

Image transformation and data augmentation

Training a CNN smile classifier
